=begin

Project Euler - Problem #2

	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

=end

require 'benchmark'
time = Benchmark.realtime do

# Begin Solution
fibonacci = [1, 2]

until fibonacci[-1] > 4_000_000 do 
	fibonacci.push(fibonacci[-1] + fibonacci[-2])
end
fibonacci.delete_at(-1) # loop stops when the last term is GREATER than 4_000_000

answer = 0

fibonacci.each do |i|
	answer += i if i % 2 == 0
end

puts(answer)
# End Solution

end
puts("Solved in #{time} seconds.")